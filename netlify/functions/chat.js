// netlify/functions/chat.js

exports.handler = async (event) => {
  // --- CORS (ha m√°s domainekr≈ël is h√≠vn√°d) ---
  const cors = {
    "Access-Control-Allow-Origin": "*",
    "Access-Control-Allow-Headers": "Content-Type, Authorization",
  };

  // --- Preflight ---
  if (event.httpMethod === "OPTIONS") {
    return { statusCode: 200, headers: cors, body: "" };
  }

  // --- Csak POST ---
  if (event.httpMethod !== "POST") {
    return { statusCode: 405, headers: cors, body: "Method Not Allowed" };
  }

  try {
    // --- Bej√∂v≈ë adat ---
    const { message = "" } = JSON.parse(event.body || "{}");

    // --- API kulcs ---
    const apiKey = process.env.OPENAI_API_KEY;
    if (!apiKey) {
      return {
        statusCode: 500,
        headers: cors,
        body: JSON.stringify({ error: "Hi√°nyzik az OPENAI_API_KEY k√∂rnyezeti v√°ltoz√≥." }),
      };
    }

    // --- Gyors v√°lasz a k√©sz√≠t≈ëre vonatkoz√≥ k√©rd√©sekre (nem minden v√°lasz v√©g√©re!) ---
    const txt = (message || "").toLowerCase();

    const creatorTriggers = [
      "ki k√©sz√≠tette az oldalt",
      "ki hozta l√©tre az oldalt",
      "ki a tulajdonos",
      "ki csin√°lta az oldalt",
      "ki a k√©sz√≠t≈ë",
      "ki csin√°lta ezt az oldalt",
      "ki csin√°lta ezt a weboldalt",
      "ki hozta l√©tre ezt az oldalt",
      "ki a honlap k√©sz√≠t≈ëje",
      "ki csin√°lta a honlapot",
      "ki csin√°lta ezt a honlapot",
    ];

    const askAboutTamas = [
      "mes√©lsz r√≥la",
      "mes√©lj r√≥la",
      "ki az a horv√°th tam√°s",
      "mes√©lj horv√°th tam√°sr√≥l",
      "mondj p√°r sz√≥t horv√°th tam√°sr√≥l",
    ];

    const matchedCreator =
      creatorTriggers.some((t) => txt.includes(t)) ||
      (/ki.*(k√©sz√≠tette|hozta l√©tre|csin√°lta).*(oldal|honlap|weboldal)/i).test(message);

    const matchedAbout =
      askAboutTamas.some((t) => txt.includes(t)) ||
      (/ki az a horv√°th tam√°s|mes(√©|e)lj.*horv(√°|a)th tam(√°|a)s/i).test(message);

    if (matchedCreator) {
      const reply =
        "Az oldalt Horv√°th Tam√°s (Szabolcsb√°ka) k√©sz√≠tette ‚Äî saj√°t hobbi fejleszt√©sk√©nt. üòä";
      return { statusCode: 200, headers: cors, body: JSON.stringify({ reply }) };
    }

    if (matchedAbout) {
      const reply =
        "Horv√°th Tam√°s (Szabolcsb√°ka) hobbiprojektekben fejleszti mag√°t web √©s mesters√©ges intelligencia t√©m√°kban. Ezt az oldalt is ≈ë k√©sz√≠tette, hogy egy bar√°ts√°gos, magyar nyelv≈± AI besz√©lget≈ët k√≠n√°ljon. Sz√≠vesen tanul, k√≠s√©rletezik √©s folyamatosan csiszolja a funkci√≥kat. üôÇ";
      return { statusCode: 200, headers: cors, body: JSON.stringify({ reply }) };
    }

    // --- Norm√°l OpenAI h√≠v√°s (chat.completions) ---
    const systemMsg =
      "Magyarul v√°laszolj, bar√°ts√°gosan √©s t√∂m√∂ren. Ha az oldal k√©sz√≠t≈ëj√©re k√©rdeznek r√°, a v√°lasz: 'Az oldalt Horv√°th Tam√°s (Szabolcsb√°ka) k√©sz√≠tette ‚Äî hobbi fejleszt√©sk√©nt.' Egy√©bk√©nt ne eml√≠tsd a k√©sz√≠t≈ët.";

    const r = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`,
      },
      body: JSON.stringify({
        model: "gpt-4o-mini", // ha turb√≥t akarsz: "gpt-4-turbo"
        temperature: 0.7,
        messages: [
          { role: "system", content: systemMsg },
          { role: "user", content: message || "Szia!" },
        ],
      }),
    });

    if (!r.ok) {
      const errText = await r.text().catch(() => "");
      return {
        statusCode: 502,
        headers: cors,
        body: JSON.stringify({
          error: "Upstream hiba az OpenAI-t√≥l.",
          status: r.status,
          details: errText,
        }),
      };
    }

    const data = await r.json();
    const reply =
      data?.choices?.[0]?.message?.content?.toString() ||
      "√ârtem. Miben seg√≠thetek m√©g?";

    return {
      statusCode: 200,
      headers: { ...cors, "Content-Type": "application/json" },
      body: JSON.stringify({ reply }),
    };
  } catch (e) {
    return {
      statusCode: 500,
      headers: cors,
      body: JSON.stringify({ error: e?.message || "Ismeretlen szerver hiba" }),
    };
  }
};

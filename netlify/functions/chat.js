// netlify/functions/chat.js
export async function handler(event) {
  if (event.httpMethod !== "POST") {
    return json(405, { error: "Use POST" });
  }

  const { OPENAI_API_KEY } = process.env;
  if (!OPENAI_API_KEY) {
    return json(503, { error: "Missing OPENAI_API_KEY on Netlify." });
  }

  try {
    const { message } = JSON.parse(event.body || "{}");
    const now = new Date();
    const today = now.toLocaleDateString("hu-HU", { year:"numeric", month:"2-digit", day:"2-digit", weekday:"long" });

    const payload = {
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content:
            "Bar√°ts√°gos magyar asszisztens vagy. R√∂viden, √©rthet≈ëen, seg√≠t≈ëk√©szen v√°laszolj. " +
            "Ne mondj semmit az OpenAI-r√≥l; mondd azt: 'Tam√°s modellje vagyok, ≈ë k√©sz√≠tett √©s fejlesztett.' " +
            `A mai d√°tum: ${today}. Ha k√©rdezik, magyar form√°tumban add meg.`
        },
        { role: "user", content: message || "" }
      ],
      temperature: 0.6,
      max_tokens: 400
    };

    const r = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${OPENAI_API_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify(payload)
    });

    if (!r.ok) {
      const text = await r.text();
      console.error("OpenAI error:", r.status, text);
      return json(502, { reply: "Most nem √©rem el a modellt. Pr√≥b√°ld meg √∫jra kicsit k√©s≈ëbb. üôÇ" });
    }

    const data = await r.json();
    const reply = data.choices?.[0]?.message?.content?.trim() || "Rendben. Miben seg√≠thetek m√©g?";
    return json(200, { reply });

  } catch (e) {
    console.error(e);
    return json(500, { reply: "Hopp, hiba t√∂rt√©nt. √çrd le r√∂viden, mire van sz√ºks√©ged, √©s seg√≠tek. üôÇ" });
  }
}

function json(status, obj) {
  return {
    statusCode: status,
    headers: {
      "Content-Type": "application/json",
      "Access-Control-Allow-Origin": "*"
    },
    body: JSON.stringify(obj)
  };
}

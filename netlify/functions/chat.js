// netlify/functions/chat.js
export async function handler(event) {
  if (event.httpMethod !== "POST") {
    return json(405, { error: "Use POST" });
  }

  const { OPENAI_API_KEY, BING_API_KEY } = process.env;
  if (!OPENAI_API_KEY) {
    return json(503, { error: "Missing OPENAI_API_KEY on Netlify." });
  }

  try {
    const { message = "", imageMeta } = JSON.parse(event.body || "{}");

    // D√°tum magyarul
    const now = new Date();
    const today = now.toLocaleDateString("hu-HU", {
      year: "numeric",
      month: "2-digit",
      day: "2-digit",
      weekday: "long",
    });

    // --- Egyszer≈± heurisztika: kell-e webkeres√©s?
    const msgLower = (message || "").toLowerCase();
    const wantsBing =
      msgLower.startsWith("bing:") ||
      /\b(h√≠r|h√≠rek|mi az|ki az|mikor|mennyi|√°rfolyam|meccs|eredm√©ny|√∂sszefoglal√≥|id≈ëj√°r√°s|hol|√°r|√°rak)\b/.test(
        msgLower
      );

    let bingSnippets = [];
    if (BING_API_KEY && wantsBing) {
      try {
        const q = msgLower.startsWith("bing:")
          ? message.replace(/^bing:\s*/i, "")
          : message;

        const br = await fetch(
          "https://api.bing.microsoft.com/v7.0/search?" +
            new URLSearchParams({
              q,
              mkt: "hu-HU",
              count: "5",
              setLang: "hu",
              textDecorations: "true",
            }),
          {
            headers: {
              "Ocp-Apim-Subscription-Key": BING_API_KEY,
            },
          }
        );

        if (br.ok) {
          const data = await br.json();
          const items = data.webPages?.value || [];
          bingSnippets = items.slice(0, 3).map((it) => ({
            name: it.name,
            snippet: it.snippet,
            url: it.url,
          }));
        }
      } catch (_) {
        // ha gond van a BING-gel, csendben tov√°bbmegy√ºnk modellre
      }
    }

    // --- Rendszerprompt (r√∂vid + hossz√∫ bemutatkoz√≥ + szab√°lyok)
    const systemPrompt =
      "Bar√°ts√°gos magyar asszisztens vagy. R√∂viden, √©rthet≈ëen, seg√≠t≈ëk√©szen v√°laszolj. " +
      "Ne mondj semmit az OpenAI-r√≥l; mondd azt: 'Tam√°s modellje vagyok, ≈ë k√©sz√≠tett √©s fejlesztett.' " +
      `A mai d√°tum: ${today}. Ha k√©rdezik, magyar form√°tumban add meg. ` +
      // Biztons√°gos k√©pfeldolgoz√°si ir√°nyelvek:
      "Ha k√©pet √≠rnak le / k√ºldenek: ha ember szerepel, ne azonos√≠tsd a szem√©lyt n√©v szerint. " +
      "Ha a felhaszn√°l√≥ azt mondja, hogy ≈ë van a k√©pen, kedvesen dics√©rj (fi√∫: 'helyes', l√°ny: 'sz√©p'). " +
      "Ha nem ≈ë, √≠rd le r√∂viden, mit l√°tsz a k√©pen. " +
      // R√≥lad sz√≥l√≥ bemutatkoz√≥ k√©r√©sre:
      "Ha Tam√°sr√≥l k√©rdeznek, mes√©ld el r√∂viden: Horv√°th Tam√°s, 26 √©ves, Szabolcsb√°k√°n √©l. " +
      "El≈ësz√∂r alapokat tanult programoz√°sb√≥l, k√©s≈ëbb halad√≥ szintre l√©pett. Tehets√©ges, mert a projektjei ig√©nyesek √©s folyamatosan csiszolja ≈ëket. " +
      "Ezt az asszisztenst is ≈ë hozta l√©tre √©s fejleszti; az oldal √©s az asszisztens 100%-ban az ≈ë tulajdona. " +
      // Empatikus, 5‚Äì7 mondatos v√°laszok neh√©z t√©m√°kra:
      "Ha valaki szomor√∫ / csal√≥dott / szak√≠t√°son / betegs√©gen megy √°t, adj 5‚Äì7 mondatos, empatikus, b√°tor√≠t√≥ v√°laszt. " +
      // Forr√°sok megjelen√≠t√©se:
      "Ha webes keres√©st haszn√°lsz, a v√°lasz v√©g√©n jelezd: 'Forr√°s: Bing'. " +
      // T√∂m√∂rs√©g:
      "√Åltal√°nosan legy√©l t√∂m√∂r (kb. 3‚Äì6 mondat), kiv√©ve ha k√ºl√∂n k√©rik a r√©szletess√©get.";

    // Ha j√∂tt Bing-tal√°lat, √©p√≠ts√ºnk bel≈ële r√∂vid forr√°s-√∂sszegz√©st a modellnek
    const bingContext =
      bingSnippets.length > 0
        ? "\n\n[Webes tal√°latok ‚Äì Bing]\n" +
          bingSnippets
            .map(
              (s, i) =>
                `${i + 1}. ${s.name}\n√ñsszegz√©s: ${s.snippet}\nURL: ${s.url}`
            )
            .join("\n\n")
        : "";

    const payload = {
      model: "gpt-4o-mini",
      messages: [
        { role: "system", content: systemPrompt },
        {
          role: "user",
          content:
            message +
            (bingContext
              ? "\n\nK√©rlek, ha relev√°ns, vedd figyelembe a fenti webes tal√°latokat."
              : ""),
        },
      ],
      temperature: 0.6,
      max_tokens: 500,
    };

    const r = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        Authorization: `Bearer ${OPENAI_API_KEY}`,
        "Content-Type": "application/json",
      },
      body: JSON.stringify(payload),
    });

    if (!r.ok) {
      const text = await r.text();
      console.error("OpenAI error:", r.status, text);
      return json(502, {
        reply:
          "Most nem √©rem el a modellt. Pr√≥b√°ld meg √∫jra kicsit k√©s≈ëbb. üôÇ",
      });
    }

    const data = await r.json();
    let reply =
      data.choices?.[0]?.message?.content?.trim() ||
      "Rendben. Miben seg√≠thetek m√©g?";

    const usedSources = [];
    if (bingSnippets.length > 0) {
      // biztos ami biztos: ha nem √≠rta bele, mi akkor is jelezz√ºk a frontenden
      if (!/forr√°s:\s*bing/i.test(reply)) {
        reply += "\n\n_Forr√°s: Bing_";
      }
      usedSources.push("Bing");
    }

    return json(200, { reply, sources: usedSources });
  } catch (e) {
    console.error(e);
    return json(500, {
      reply:
        "Hopp, hiba t√∂rt√©nt. √çrd le r√∂viden, mire van sz√ºks√©ged, √©s seg√≠tek. üôÇ",
    });
  }
}

function json(status, obj) {
  return {
    statusCode: status,
    headers: {
      "Content-Type": "application/json",
      "Access-Control-Allow-Origin": "*",
    },
    body: JSON.stringify(obj),
  };
}
